

Git Squash


To reducing the number of commits and can end up with a few commits, we can do this by the git squash operation.


Let us say I am having one feature branch and I have created 10 commits inside it, and now I feel that these much commits I don’t required then I can reduce the commit ids as well by the operations git squash..

Squashing in Git means combining multiple commits into a single one

usually done to keep the Git history clean.

It’s most commonly used in feature branches before merging into main or develop..

When to use git squash  
•  Cleaning up messy commit history (e.g., fix typo, test, final version)
•  Combining commits for better readability before a PR/merge
•  During an interactive rebase



Now you want to end up with 1 commit instead of 3 commits then now 

Use command  git rebase -I HEAD~3

Then one terminal will open  keep pick for those commits which you want to pick the commit and squash for those commits which you don’t want to be the part of your commit..
Now again another terminal open for the commit message, you can edit that and save that file again..
	Now you are able to see that 3 commits are end up with the one commit.. by using command  git log –oneline


Let us say you have performed git squash operation and then you can see the (|REBASE) in the place of master, and now you wanted to come out from that then use command 

rm -fr ".git/rebase-merge"       (useful command to come out from rebase operation)

